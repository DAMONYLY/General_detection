Classes:
  name: ['aeroplane', 'bicycle', 'bird', 'boat', 'bottle', 'bus',
           'car', 'cat', 'chair', 'cow', 'diningtable', 'dog', 'horse',
           'motorbike', 'person', 'pottedplant', 'sheep', 'sofa',
           'train', 'tvmonitor']
  num: 20
        
Model:
  name: General # [YOLO, General]
  backbone:
    pretrain: True # whether to use pretrain model
    weight_path: # if exist, means load this weight path to pretrain
    name: Resnet # [Darknet53, Resnet, shufflenetv2]
    depth: 50 # depth of ResNet model [18, 34, 50, 101, 152]
    # model_size: 0.5x # model size of shufflenetv2 model[0.5x, 1.0x, 1.5x, 2.0x]
  neck:
    name: fpn
    channel_out: 256 # fpn层输出通道大小, 没有则默认是256
    out_stride: [8, 16, 32] # TODO: 用于输出多少x的特征图用来检测
  head:
    name: retina_head
    reg_head:
      out_channel: 4
      mid_channel: 256
      stack_layers: 4 # 用于指定卷积的层数
    cls_head:
      out_channel: 20
      mid_channel: 256
      stack_layers: 4 # 用于指定卷积的层数
    head_shared: True # TODO: 用于指定head对于不同的FPN层是否共享 
  anchors: 
    strides: [8, 16, 32, 64, 128]
    # base_sizes: 
    ratios: [1]
    scales: [8]
    num: 1
  metrics: 
    name: ATSS # [Max_iou, ATSS, change]
    pos_iou_thr: 0.5
    neg_iou_thr: 0.4
    topk: 9
  sample:
    name: Retinanet
    bbox_coder: bbox2delta
  loss:
    name : Reg_Cls_Loss
    reg_loss: 
      name: SmoothL1_Loss #[SmoothL1_Loss, IOU_Loss, CIOU_Loss]
      ratio: 10
    cls_loss: 
      name: Focal_Loss # [Focal_Loss, BCE_Loss, Test_Loss]
      ratio: 1

Data:
  dataset_type: coco # type of dataset, now only support coco
  train:
    dataset_path: ./dataset/voc2coco # path of dataset
    set_name: train2017
    pipeline:
      hsv_aug:
        prob: 1.0
      flip_aug:
        prob: 0.5
      resize_aug:
        input_size: [640, 640]
        keep_ratio: False
      norm_aug:
        mean: [123.675, 116.28, 103.53]
        std: [58.395, 57.12, 57.375]
      to_tensor_aug:

  test:
    dataset_path: ./dataset/voc2coco # path of dataset
    set_name: val2017
    pipeline:
      resize_aug:
        input_size: [640, 640]
        keep_ratio: False
      norm_aug:
        mean: [123.675, 116.28, 103.53]
        std: [58.395, 57.12, 57.375]
      to_tensor_aug:
    nms_thre: 0.5
      
Schedule:
  resume_path: #./results/funfun333/backup_epoch0.pt # if exist, means resume training from resume path
  device:
    gpus: '0,1' # cuda device, i.e. 0 or 0,1,2,3 or cpu
    batch_size: 20
    num_workers: 4
  seed: 
  epochs: 20
  optimizer:
    name: SGD
    lr: 0.01
    momentum: 0.9
    weight_decay: 0.0001
  lr_schedule:
    name: MultiStep_LR
    milestones: [13]
    gamma: 0.1
    warmup: 2

Log:
  save_path: ./results/atss3 # where to save model(.pth) and tensorboard data
  tensorboard: True # whether to use tensorboard to collect results
  val_intervals: 1 # epochs to val 


