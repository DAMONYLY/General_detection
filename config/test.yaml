
Classes:
  name: ['aeroplane', 'bicycle', 'bird', 'boat', 'bottle', 'bus',
           'car', 'cat', 'chair', 'cow', 'diningtable', 'dog', 'horse',
           'motorbike', 'person', 'pottedplant', 'sheep', 'sofa',
           'train', 'tvmonitor']
  num: 20
        
Model:
  name: General # [YOLO, General]
  backbone:
    pretrain: True # whether to use pretrain model
    weight_path: # if exist, means load this weight path to pretrain
    name: Resnet # [Darknet53, Resnet, shufflenetv2]
    depth: 50 # depth of ResNet model [18, 34, 50, 101, 152]
    # model_size: 1.0x # model size of shufflenetv2 model[0.5x, 1.0x, 1.5x, 2.0x]
  fpn:
    name: fpn
    channel_out: 256 # fpn层输出通道大小, 没有则默认是256
    out_stride: [8, 16, 32] # TODO: 用于输出多少x的特征图用来检测
  head:
    name: normal
    reg_head:
      out_channel: 4
      mid_channel: 256
      stack_layers: 4 # 用于指定卷积的层数
    cls_head:
      out_channel: 20
      mid_channel: 256
      stack_layers: 4 # 用于指定卷积的层数
    head_shared: True # TODO: 用于指定head对于不同的FPN层是否共享 
  anchors: 
    strides: [8, 16, 32, 64, 128]
    # base_sizes: 
    ratios: [0.5, 1, 2]
    scales: [4, 5, 6]
    num: 9
  metrics: 
    name: ATSS # [Max_iou, ATSS]
    pos_iou_thr: 0.5
    neg_iou_thr: 0.4
    topk: 9
  sample:
    name: Retinanet
  loss:
    reg_loss: 
      name: SmoothL1 #[SmoothL1, IOU]
      ratio: 10
    cls_loss: 
      name: Focal
      ratio: 1

Data:
  dataset_type: coco # type of dataset, now only support coco
  train:
    dataset_path: ./dataset/voc2coco # path of dataset
    pipeline:
      input_size: [640, 640]
      keep_ratio: False
      hsv_prob: 1.0
      flip_prob: 0.5
  test:
    dataset_path: ./dataset/voc2coco # path of dataset
    pipeline:
      input_size: [640, 640]
      keep_ratio: False
    nms_thre: 0.5
      
Schedule:
  resume_path:  # if exist, means resume training from resume path
  device:
    gpus: '0' # cuda device, i.e. 0 or 0,1,2,3 or cpu
    batch_size: 20
    num_workers: 4
  seed: 10
  epochs: 50
  optimizer:
    name: SGD
    lr: 0.001
    momentum: 0.9
    weight_decay: 0.0001
  lr_schedule:
    name: MultiStep_LR
    milestones: [25,45]
    gamma: 0.1
    warmup: 1

Log:
  save_path: ./results/ATSS_test # where to save model(.pth) and tensorboard data
  tensorboard: True # whether to use tensorboard to collect results
  val_intervals: 2 # epochs to val 


